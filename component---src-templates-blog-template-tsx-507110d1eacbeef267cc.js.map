{"version":3,"file":"component---src-templates-blog-template-tsx-507110d1eacbeef267cc.js","mappings":"qQAgCA,EAb4B,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAC9B,OACC,UAAC,KAAD,YACC,SAAC,KAAD,KACA,UAAC,KAAD,YACC,wBAAKA,EAAKC,YAAYC,QACrBC,EAAAA,EAAAA,GAAUH,EAAKI,aAEjB,SAAC,KAAD,Q,oBCVUC,GAAwCC,EAAAA,EAAAA,OACpD,YAAiD,IAAxBC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,SAAUR,EAAQ,EAARA,KACvC,OACC,SAAC,IAAD,CACCS,MAAOT,EAAKS,MACZC,SACC,SAAC,IAAD,CACCC,OAAOC,EAAAA,EAAAA,GAAkBL,GACzBM,WAAYL,EACZM,MAAM,IANT,UAUC,SAAC,EAAD,CAAMd,KAAMA,SAMD,SAASe,EAAT,GAGN,IAAD,IAFPC,KAAQhB,EAED,EAFCA,KAAMO,EAEP,EAFOA,IACFC,EACL,EADPS,SAAYT,SAEZ,OAAO,SAACH,EAAD,CAAeL,KAAMA,EAAMO,IAAKA,EAAKC,SAAUA","sources":["webpack://@chart-parts/docsite/./src/components/post.tsx","webpack://@chart-parts/docsite/./src/templates/blogTemplate.tsx"],"sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport { FC } from 'react'\nimport renderAst from '../util/renderHtmlAst'\nimport { TextContainer, Gutter, TextContent } from './common'\n\nexport interface PostProps {\n\tpost: {\n\t\thtml: string\n\t\thtmlAst: any\n\t\tfrontmatter: {\n\t\t\tdate: string\n\t\t}\n\t}\n}\n\nconst Post: FC<PostProps> = ({ post }) => {\n\treturn (\n\t\t<TextContainer>\n\t\t\t<Gutter />\n\t\t\t<TextContent>\n\t\t\t\t<h6>{post.frontmatter.date}</h6>\n\t\t\t\t{renderAst(post.htmlAst)}\n\t\t\t</TextContent>\n\t\t\t<Gutter />\n\t\t</TextContainer>\n\t)\n}\n\nexport default Post\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport { graphql } from 'gatsby'\nimport { memo, FC } from 'react'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\nimport Sidebar from '../components/sidebar'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nexport interface BlogStructureProps {\n\ttoc: any\n\tpathname: string\n\tpost: any\n}\nexport const BlogStructure: FC<BlogStructureProps> = memo(\n\tfunction BlogStructure({ toc, pathname, post }) {\n\t\treturn (\n\t\t\t<Layout\n\t\t\t\ttitle={post.title}\n\t\t\t\tsidebar={\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\titems={convertGraphqlToc(toc)}\n\t\t\t\t\t\tactivePath={pathname}\n\t\t\t\t\t\tflat={true}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Post post={post} />\n\t\t\t</Layout>\n\t\t)\n\t}\n)\n\nexport default function Template({\n\tdata: { post, toc },\n\tlocation: { pathname },\n}: any) {\n\treturn <BlogStructure post={post} toc={toc} pathname={pathname} />\n}\n\nexport const pageQuery = graphql`\n\tquery ($path: String!) {\n\t\tpost: markdownRemark(frontmatter: { path: { eq: $path } }) {\n\t\t\thtml\n\t\t\thtmlAst\n\t\t\tfrontmatter {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tpath\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"names":["post","frontmatter","date","renderAst","htmlAst","BlogStructure","memo","toc","pathname","title","sidebar","items","convertGraphqlToc","activePath","flat","Template","data","location"],"sourceRoot":""}