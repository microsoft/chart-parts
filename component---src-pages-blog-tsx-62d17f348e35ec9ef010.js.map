{"version":3,"file":"component---src-pages-blog-tsx-62d17f348e35ec9ef010.js","mappings":";0MASe,SAASA,EAAT,GAUN,IAAD,IATPC,KACCC,EAQM,EARNA,IAGaC,EAKP,EAPNA,KACCC,MACC,GAAKC,KAIIC,EACL,EADPC,SAAYD,SAEZ,OAAO,gBAAC,EAAAE,cAAD,CAAeN,IAAKA,EAAKC,KAAMA,EAAMG,SAAUA,sJCYvD,EAbkC,SAAC,GAAc,IAAZH,EAAW,EAAXA,KACpC,OACC,gBAAC,KAAD,KACC,gBAAC,KAAD,MACA,gBAAC,KAAD,KACC,0BAAKA,EAAKM,YAAYC,OACrBC,EAAAA,EAAAA,GAAUR,EAAKS,UAEjB,gBAAC,KAAD,4BCVUJ,GAA8CK,EAAAA,EAAAA,OAC1D,YAAiD,IAAxBX,EAAuB,EAAvBA,IAAKI,EAAkB,EAAlBA,SAAUH,EAAQ,EAARA,KACvC,OACC,gBAAC,IAAD,CACCW,MAAOX,EAAKW,MACZC,QACC,gBAAC,IAAD,CACCC,OAAOC,EAAAA,EAAAA,GAAkBf,GACzBgB,WAAYZ,EACZa,MAAM,KAIR,gBAAC,EAAD,CAAMhB,KAAMA,QAMD,SAASiB,EAAT,GAGN,IAAD,IAFPnB,KAAQE,EAED,EAFCA,KAAMD,EAEP,EAFOA,IACFI,EACL,EADPC,SAAYD,SAEZ,OAAO,gBAACE,EAAD,CAAeL,KAAMA,EAAMD,IAAKA,EAAKI,SAAUA","sources":["webpack://@chart-parts/docsite/./src/pages/blog.tsx","webpack://@chart-parts/docsite/./src/components/post.tsx","webpack://@chart-parts/docsite/./src/templates/blogTemplate.tsx"],"sourcesContent":["/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\nimport { graphql } from 'gatsby'\nimport React from 'react'\nimport { BlogStructure } from '../templates/blogTemplate'\n\n// Gatsby page handler for http://<domain>/blog\nexport default function Blog({\n\tdata: {\n\t\ttoc,\n\t\tpost: {\n\t\t\tedges: {\n\t\t\t\t0: { node: post },\n\t\t\t},\n\t\t},\n\t},\n\tlocation: { pathname },\n}: any) {\n\treturn <BlogStructure toc={toc} post={post} pathname={pathname} />\n}\n\nexport const query = graphql`\n\t{\n\t\tpost: allMarkdownRemark(\n\t\t\tsort: { order: DESC, fields: frontmatter___date }\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t\tlimit: 1\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\thtml\n\t\t\t\t\thtmlAst\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport React from 'react'\nimport renderAst from '../util/renderHtmlAst'\nimport { TextContainer, Gutter, TextContent } from './common'\n\nexport interface PostProps {\n\tpost: {\n\t\thtml: string\n\t\thtmlAst: any\n\t\tfrontmatter: {\n\t\t\tdate: string\n\t\t}\n\t}\n}\n\nconst Post: React.FC<PostProps> = ({ post }) => {\n\treturn (\n\t\t<TextContainer>\n\t\t\t<Gutter />\n\t\t\t<TextContent>\n\t\t\t\t<h6>{post.frontmatter.date}</h6>\n\t\t\t\t{renderAst(post.htmlAst)}\n\t\t\t</TextContent>\n\t\t\t<Gutter />\n\t\t</TextContainer>\n\t)\n}\n\nexport default Post\n","/*!\n * Copyright (c) Microsoft. All rights reserved.\n * Licensed under the MIT license. See LICENSE file in the project.\n */\n\nimport { graphql } from 'gatsby'\nimport React, { memo } from 'react'\nimport Layout from '../components/layout'\nimport Post from '../components/post'\nimport Sidebar from '../components/sidebar'\nimport convertGraphqlToc from '../util/convertGraphqlToc'\n\nexport interface BlogStructureProps {\n\ttoc: any\n\tpathname: string\n\tpost: any\n}\nexport const BlogStructure: React.FC<BlogStructureProps> = memo(\n\tfunction BlogStructure({ toc, pathname, post }) {\n\t\treturn (\n\t\t\t<Layout\n\t\t\t\ttitle={post.title}\n\t\t\t\tsidebar={\n\t\t\t\t\t<Sidebar\n\t\t\t\t\t\titems={convertGraphqlToc(toc)}\n\t\t\t\t\t\tactivePath={pathname}\n\t\t\t\t\t\tflat={true}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<Post post={post} />\n\t\t\t</Layout>\n\t\t)\n\t}\n)\n\nexport default function Template({\n\tdata: { post, toc },\n\tlocation: { pathname },\n}: any) {\n\treturn <BlogStructure post={post} toc={toc} pathname={pathname} />\n}\n\nexport const pageQuery = graphql`\n\tquery($path: String!) {\n\t\tpost: markdownRemark(frontmatter: { path: { eq: $path } }) {\n\t\t\thtml\n\t\t\thtmlAst\n\t\t\tfrontmatter {\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n\t\t\t\tpath\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\n\t\ttoc: allMarkdownRemark(\n\t\t\tfilter: { frontmatter: { path: { regex: \"/^/blog/.*/\" } } }\n\t\t) {\n\t\t\tedges {\n\t\t\t\tnode {\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\ttitle\n\t\t\t\t\t\tpath\n\t\t\t\t\t\torder\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`\n"],"names":["Blog","data","toc","post","edges","node","pathname","location","BlogStructure","frontmatter","date","renderAst","htmlAst","memo","title","sidebar","items","convertGraphqlToc","activePath","flat","Template"],"sourceRoot":""}